name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: 디렉토리 구조 확인 및 생성
        run: |
          pwd
          ls -R
          mkdir -p ./src/main/resources

      - name: 권한 설정
        run: chmod -R 755 ./src

      - name: application.yml 파일 만들기
        run: |
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml
          if [ $? -ne 0 ]; then
            echo "파일 생성 실패"
            exit 1
          fi
          echo "파일 생성 성공"
          cat ./src/main/resources/application.yml

      - name: 파일 생성 확인
        run: |
          ls -la ./src/main/resources/
          cat ./src/main/resources/application.yml

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: 파일 존재 확인
        run: |
          ls -l
          ls -l scripts || echo "scripts 디렉토리가 없습니다"
          ls -l project.jar || echo "project.jar 파일이 없습니다"
          ls -l appspec.yml || echo "appspec.yml 파일이 없습니다"

      - name: scripts 디렉토리 생성
        run: mkdir -p scripts

      - name: appspec.yml 확인 및 생성
        run: |
          if [ ! -f appspec.yml ]; then
            echo "appspec.yml 파일이 없습니다. 기본 내용으로 생성합니다."
            echo "version: 0.0
          OS: linux
          files:
            - source: /
              destination: /home/ubuntu/app" > appspec.yml
          fi
          cat appspec.yml

      - name: 압축하기
        run: |
          files_to_compress=""
          [ -f project.jar ] && files_to_compress="$files_to_compress project.jar"
          [ -f appspec.yml ] && files_to_compress="$files_to_compress appspec.yml"
          [ -d scripts ] && files_to_compress="$files_to_compress scripts"
          
          if [ -n "$files_to_compress" ]; then
            tar -czvf $GITHUB_SHA.tar.gz $files_to_compress
          else
            echo "압축할 파일이 없습니다."
            exit 1
          fi

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://github-action-server/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: aws deploy create-deployment
          --application-name github-action-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name product
          --s3-location bucket=github-action-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz
